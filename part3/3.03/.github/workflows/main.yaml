name: Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: dwk-gke-445103
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  BRANCH: ${{ github.ref_name }}
  BACKEND_IMAGE: todo-app-backend
  FRONTEND_IMAGE: todo-app-frontend
  CRONJOB_IMAGE: todo-app-cronjob

jobs:
  build-publish-deploy:
    name: Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Verify GCloud Installation
        run: gcloud info

      - name: Configure Docker for GCR
        run: gcloud --quiet auth configure-docker

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          project_id: ${{ env.PROJECT_ID }}
          location: ${{ env.GKE_ZONE }}


      - name: Build Backend Image
        run: |
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.BACKEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }} ./todo-app/backend
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.BACKEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}

      - name: Build Frontend Image
        run: |
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.FRONTEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }} ./todo-app/frontend
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.FRONTEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}

      - name: Build CronJob Image
        run: |
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.CRONJOB_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }} ./todo-app/backend/jobs
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.CRONJOB_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}

      - name: Create Kubernetes Secret
        run: |
          kubectl create secret generic todo-db-secret \
            --namespace todo \
            --from-literal=POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
            --from-literal=POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            --from-literal=POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2.1.0

      - name: Deploy to GKE
        run: |
          cd ./part3/3.03/manifests
          kustomize edit set image PROJECT/BACKEND_IMAGE=gcr.io/${{ env.PROJECT_ID }}/${{ env.BACKEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}
          kustomize edit set image PROJECT/FRONTEND_IMAGE=gcr.io/${{ env.PROJECT_ID }}/${{ env.FRONTEND_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}
          kustomize edit set image PROJECT/CRONJOB_IMAGE=gcr.io/${{ env.PROJECT_ID }}/${{ env.CRONJOB_IMAGE }}:${{ env.BRANCH }}-${{ github.sha }}
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment todo-app -n todo
          kubectl rollout status deployment todo-backend -n todo
          kubectl get all -n todo
